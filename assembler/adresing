OFFSET перемнная - записать адрес переменной

Непосредственная адресация - операнд константа

label xh byte at x+1 (обращение к старшему байту слова x)

.label - локальная метка (работает только в пределах глобальной)

@data - смещение сегмента данных

@@ - объявление анонименой метки
@b - адрес ближайшой прошлой анонименой метки
@f - адрес ближайшой следующий анонимной метки

macro name arg (код будет заново генерится в месте каждого вызова макроса)
{
	тут код
}

name arg - вызов макроса

macro clr reg {xor reg,reg}

clr reg

end metka - отмечает конец исполняемого модуля и задает начальный адрес с которого будет исполнятся программа

Непосредственная адресация - mov dx,1234h
Регистровая - mov dx,ax
Прямая - mov dl, [2000h]
Регистровая косвенная - mov dx,[bx] - пары Cs:[bx], ds:[si], ss:[bp], es:[di]
Базовая - mov al,[bx+15] или mov al,15[bx] - работает с bx или bp (8 и 16 битная)
Индексная - как базовая, но с индексными регистрами mov al,[si+15]
Базовоз-индексная mov cx,[bx+si]

Адресация адресов:
Внутрисегментная прямая jmp label. ip+смещение, если смещение больше 8 бит - длинный прыжок
Внутрисегментный косвенный jmp ax; jmp [bx], jmp cs:[bx+si+28]
Межсегментный прямо, Межсегментный косвенный

Эффективный адрес - сумма базового и индексного смещений
